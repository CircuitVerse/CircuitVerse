class ::Hash[unchecked out K, unchecked out V]
  def with_indifferent_access: () -> instance
  def deep_merge!: (instance other) -> self
end

class ::Object
  def presence: () -> String?
  def blank?: () -> bool
  def present?: () -> bool
end

interface _ActionControllerBase
  def render: (*untyped args) { () -> untyped } -> untyped
end

interface _ActionViewBase
  def tag: (String name, ?Hash[String | Symbol, untyped] options, ?bool open) -> void

  def content_tag: (String name, String content, ?Hash[String | Symbol, untyped] options, ?bool open) -> void

  def safe_join: (Array[String], String) -> String

  def truncate: (String text, ?Hash[Symbol, untyped] options) -> String

  def strip_tags: (String html) -> String
end
