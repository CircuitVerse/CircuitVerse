# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/type/latlng.proto

require 'google/protobuf'


descriptor_data = "\n\x18google/type/latlng.proto\x12\x0bgoogle.type\"-\n\x06LatLng\x12\x10\n\x08latitude\x18\x01 \x01(\x01\x12\x11\n\tlongitude\x18\x02 \x01(\x01\x42\x63\n\x0f\x63om.google.typeB\x0bLatLngProtoP\x01Z8google.golang.org/genproto/googleapis/type/latlng;latlng\xf8\x01\x01\xa2\x02\x03GTPb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Google
  module Type
    LatLng = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("google.type.LatLng").msgclass
  end
end

#### Source proto file: google/type/latlng.proto ####
#
# // Copyright 2025 Google LLC
# //
# // Licensed under the Apache License, Version 2.0 (the "License");
# // you may not use this file except in compliance with the License.
# // You may obtain a copy of the License at
# //
# //     http://www.apache.org/licenses/LICENSE-2.0
# //
# // Unless required by applicable law or agreed to in writing, software
# // distributed under the License is distributed on an "AS IS" BASIS,
# // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# // See the License for the specific language governing permissions and
# // limitations under the License.
#
# syntax = "proto3";
#
# package google.type;
#
# option cc_enable_arenas = true;
# option go_package = "google.golang.org/genproto/googleapis/type/latlng;latlng";
# option java_multiple_files = true;
# option java_outer_classname = "LatLngProto";
# option java_package = "com.google.type";
# option objc_class_prefix = "GTP";
#
# // An object that represents a latitude/longitude pair. This is expressed as a
# // pair of doubles to represent degrees latitude and degrees longitude. Unless
# // specified otherwise, this must conform to the
# // <a href="http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf">WGS84
# // standard</a>. Values must be within normalized ranges.
# message LatLng {
#   // The latitude in degrees. It must be in the range [-90.0, +90.0].
#   double latitude = 1;
#
#   // The longitude in degrees. It must be in the range [-180.0, +180.0].
#   double longitude = 2;
# }
