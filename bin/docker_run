#!/bin/bash

# Detect operating system [linux, macos] with uname
DETECTED_OS=$(uname -s | tr '[:upper:]' '[:lower:]')

# If operating system is linux
if [ "$DETECTED_OS" = "linux" ]; then
  # Set environment variables temporary
  export CURRENT_GID=$(id -g)
  export CURRENT_UID=$(id -u)
  export NON_ROOT_USERNAME="user"
  export NON_ROOT_GROUPNAME="user"
  export OPERATING_SYSTEM="linux"
  # Check if docker and docker compose are installed
  if ! command -v docker &>/dev/null; then
    echo "Docker is not installed. Install docker : https://docs.docker.com/engine/install/"
    exit 0
  fi
  # Check if rootless docker is available
  if docker ps &>/dev/null; then
    # Run docker-compose up
    docker compose up -d --build
    # Run docker-compose exec web bash
    docker compose exec web bin/docker/boot
    # Run docker-compose down
    docker compose down
  else
    # Run docker-compose up as root user
    sudo docker compose up -d --build
    # Run docker-compose exec web bash as root user
    sudo docker compose exec web bin/docker/boot
    # Run docker-compose down as root user
    sudo docker compose down
  fi
fi

# If operating system is macos
if [ "$DETECTED_OS" = "darwin" ]; then
  # Set environment variables temporary
  export CURRENT_GID="0"
  export CURRENT_UID="0"
  export NON_ROOT_USERNAME="root"
  export NON_ROOT_GROUPNAME="root"
  export OPERATING_SYSTEM="mac"

  # Check if docker and docker compose are installed
  if ! command -v docker &>/dev/null; then
    echo "Docker is not installed. Install docker : https://docs.docker.com/engine/install/"
    exit 0
  fi

  # Run docker-compose up
  docker compose up -d --build
  # Run docker-compose exec web bash
  docker compose exec web bin/docker/boot
  # Run docker-compose down
  docker compose down
fi
