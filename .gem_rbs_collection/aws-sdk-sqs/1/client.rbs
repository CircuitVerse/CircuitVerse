# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the generator README.md for more information:
# https://github.com/ruby/gem_rbs_collection/blob/main/generators/aws-sdk-rbs-generator/README.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module SQS
    class Client < Seahorse::Client::Base
      include Aws::ClientStubs

      def self.new: (?credentials: untyped, ?region: String, ?access_key_id: String?, ?active_endpoint_cache: bool?, ?adaptive_retry_wait_to_fill: bool?, ?client_side_monitoring: bool?, ?client_side_monitoring_client_id: String?, ?client_side_monitoring_host: String?, ?client_side_monitoring_port: Integer?, ?client_side_monitoring_publisher: untyped?, ?convert_params: bool?, ?correct_clock_skew: bool?, ?defaults_mode: String?, ?disable_host_prefix_injection: bool?, ?endpoint: untyped?, ?endpoint_cache_max_entries: Integer?, ?endpoint_cache_max_threads: Integer?, ?endpoint_cache_poll_interval: Integer?, ?endpoint_discovery: bool?, ?endpoint_provider: untyped?, ?http_continue_timeout: Integer?, ?http_idle_timeout: Integer?, ?http_open_timeout: Integer?, ?http_proxy: String?, ?http_read_timeout: Integer?, ?http_wire_trace: bool?, ?log_formatter: untyped?, ?log_level: Symbol?, ?logger: untyped?, ?max_attempts: Integer?, ?on_chunk_sent: Proc?, ?profile: String?, ?raise_response_errors: bool?, ?retry_backoff: Proc?, ?retry_base_delay: Float?, ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer)?, ?retry_limit: Integer?, ?retry_max_delay: Integer?, ?retry_mode: ("legacy" | "standard" | "adaptive")?, ?secret_access_key: String?, ?session_token: String?, ?ssl_ca_bundle: String?, ?ssl_ca_directory: String?, ?ssl_ca_store: String?, ?ssl_timeout: Float?, ?ssl_verify_peer: bool?, ?stub_responses: untyped?, ?token_provider: untyped?, ?use_dualstack_endpoint: bool?, ?use_fips_endpoint: bool?, ?validate_params: bool?, ?verify_checksums: bool?) -> instance
      def add_permission: (queue_url: Types::string, label: Types::string, aws_account_ids: Types::aws_account_id_list, actions: Types::action_name_list) -> Aws::EmptyStructure
      def change_message_visibility: (queue_url: Types::string, receipt_handle: Types::string, visibility_timeout: Types::integer) -> Aws::EmptyStructure
      def change_message_visibility_batch: (queue_url: Types::string, entries: Types::change_message_visibility_batch_request_entry_list) -> Types::ChangeMessageVisibilityBatchResult
      def create_queue: (queue_name: Types::string, ?attributes: Types::queue_attribute_map, ?tags: Types::tag_map) -> Types::CreateQueueResult
      def delete_message: (queue_url: Types::string, receipt_handle: Types::string) -> Aws::EmptyStructure
      def delete_message_batch: (queue_url: Types::string, entries: Types::delete_message_batch_request_entry_list) -> Types::DeleteMessageBatchResult
      def delete_queue: (queue_url: Types::string) -> Aws::EmptyStructure
      def get_queue_attributes: (queue_url: Types::string, ?attribute_names: Types::attribute_name_list) -> Types::GetQueueAttributesResult
      def get_queue_url: (queue_name: Types::string, ?queue_owner_aws_account_id: Types::string) -> Types::GetQueueUrlResult
      def list_dead_letter_source_queues: (queue_url: Types::string, ?next_token: Types::token, ?max_results: Types::boxed_integer) -> Types::ListDeadLetterSourceQueuesResult
      def list_queue_tags: (queue_url: Types::string) -> Types::ListQueueTagsResult
      def list_queues: (?queue_name_prefix: Types::string, ?next_token: Types::token, ?max_results: Types::boxed_integer) -> Types::ListQueuesResult
      def purge_queue: (queue_url: Types::string) -> Aws::EmptyStructure
      def receive_message: (queue_url: Types::string, ?attribute_names: Types::attribute_name_list, ?message_attribute_names: Types::message_attribute_name_list, ?max_number_of_messages: Types::integer, ?visibility_timeout: Types::integer, ?wait_time_seconds: Types::integer, ?receive_request_attempt_id: Types::string) -> Types::ReceiveMessageResult
      def remove_permission: (queue_url: Types::string, label: Types::string) -> Aws::EmptyStructure
      def send_message: (queue_url: Types::string, message_body: Types::string, ?delay_seconds: Types::integer, ?message_attributes: Types::message_body_attribute_map_input, ?message_system_attributes: Types::message_body_system_attribute_map, ?message_deduplication_id: Types::string, ?message_group_id: Types::string) -> Types::SendMessageResult
      def send_message_batch: (queue_url: Types::string, entries: Types::send_message_batch_request_entry_list) -> Types::SendMessageBatchResult
      def set_queue_attributes: (queue_url: Types::string, attributes: Types::queue_attribute_map) -> Aws::EmptyStructure
      def tag_queue: (queue_url: Types::string, tags: Types::tag_map) -> Aws::EmptyStructure
      def untag_queue: (queue_url: Types::string, tag_keys: Types::tag_key_list) -> Aws::EmptyStructure
    end
  end
end

