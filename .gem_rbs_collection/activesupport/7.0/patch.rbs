class Object
  # Object#sum is actually not defined, but rbs prototype rb generates it mistakenly due to `class << Benchmark`.
  # So we need to define it to suppress the alias error.
  def sum: () -> untyped
end

module ActiveSupport
  class TestCase < ::Minitest::Test
    # It is necessary to satisfy alias target.
    # TODO: Define this method to correct place.
    def name: () -> untyped
    def assert_raises: (*untyped) -> untyped
    def refute_empty: (*untyped) -> untyped
    def refute_equal: (*untyped) -> untyped
    def refute_in_delta: (*untyped) -> untyped
    def refute_in_epsilon: (*untyped) -> untyped
    def refute_includes: (*untyped) -> untyped
    def refute_instance_of: (*untyped) -> untyped
    def refute_kind_of: (*untyped) -> untyped
    def refute_match: (*untyped) -> untyped
    def refute_nil: (*untyped) -> untyped
    def refute_operator: (*untyped) -> untyped
    def refute_predicate: (*untyped) -> untyped
    def refute_respond_to: (*untyped) -> untyped
    def refute_same: (*untyped) -> untyped
  end
end

# Remove the fake type of Minitest
# if the real types are available.
module Minitest
  class Test
  end
end

# Remove the fake type of LibXML
# if the real types are available.
module LibXML
  module XML
    module SaxParser
      module Callbacks
      end
    end
  end
end

# Remove the fake type of Nokogiri
# if the real types are available.
module Nokogiri
  module XML
    module SAX
      class Document
      end
    end
  end
end

# Remove the fake type of TZInfo
# if the real types are available.
module TZInfo
  class Timezone
  end
end

# Remove the fake type of DRb
# if the real types are available.
module DRb
  module DRbUndumped
  end
end

# Remove the fake types for Gem::Version
# if the real types are available.
module Gem
  class Version
  end
end

# Remove the fake types for OpenSSL::Cipher
# if the real types are available.
module OpenSSL
  class Cipher
  end
end

module Rails
  class Railtie
  end
end
