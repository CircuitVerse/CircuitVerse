module Kaminari
  def self.config: () -> Kaminari::Config
  def self.configure: () { (Kaminari::Config) -> void } -> void

  class Config
    attr_accessor default_per_page: Integer
    attr_accessor max_per_page: Integer?
    attr_accessor window: Integer
    attr_accessor outer_window: Integer
    attr_accessor left: Integer
    attr_accessor right: Integer
    attr_accessor page_method_name: Symbol | String
    attr_accessor max_pages: Integer?
    attr_accessor params_on_first_page: bool

    attr_writer param_name: Symbol | String | _Callable

    def param_name: () -> (Symbol | String)
  end

  module PageScopeMethods : _Model_Relation
    def per: (Integer num, ?Integer max_per_page) -> self
    def total_pages: () -> Integer
    def current_page: () -> Integer
    def next_page: () -> Integer?
    def prev_page: () -> Integer?
    def first_page?: () -> bool
    def last_page?: () -> bool
    def out_of_range?: () -> bool
  end

  interface _Model_Relation
    def limit: (Integer) -> self
    def offset: (Integer) -> self
  end

  interface _Callable
    def call: () -> (Symbol | String)
  end
end
