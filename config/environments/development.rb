require "active_support/core_ext/integer/time"

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # Make code changes take effect immediately without server restart.
  config.enable_reloading = true

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports.
  config.consider_all_requests_local = true

  # Enable server timing.
  config.server_timing = true

  # Enable/disable Action Controller caching. By default Action Controller caching is disabled.
  # Run rails dev:cache to toggle Action Controller caching.
  if Rails.root.join("tmp/caching-dev.txt").exist?
    config.action_controller.perform_caching = true
    config.action_controller.enable_fragment_cache_logging = true
    config.public_file_server.headers = { "cache-control" => "public, max-age=#{2.days.to_i}" }
  else
    config.action_controller.perform_caching = false
  end

  # Change to :null_store to avoid any caching.
  config.cache_store = :memory_store

  # Store uploaded files on the local file system (see config/storage.yml for options).
  config.active_storage.service = :local

  # Don't care if the mailer can't send.
  config.action_mailer.raise_delivery_errors = false

  # Make template changes take effect immediately.
  config.action_mailer.perform_caching = false

  # Set localhost to be used by links generated in mailer templates.
  config.action_mailer.default_url_options = { host: "localhost", port: 3000 }

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Raise an error on page load if there are pending migrations.
  config.active_record.migration_error = :page_load

  # Highlight code that triggered database queries in logs.
  config.active_record.verbose_query_logs = true

  # Append comments with runtime information tags to SQL queries in logs.
  config.active_record.query_log_tags_enabled = true

  # Highlight code that enqueued background job in logs.
  config.active_job.verbose_enqueue_logs = true

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  config.action_view.annotate_rendered_view_with_filenames = true

  # Uncomment if you wish to allow Action Cable access from any origin.
  # config.action_cable.disable_request_forgery_protection = true

  # Raise error when a before_action's only/except options reference missing actions.
  config.action_controller.raise_on_missing_callback_actions = true

  # Apply autocorrection by RuboCop to files generated by `bin/rails generate`.
  # config.generators.apply_rubocop_autocorrect_after_generate!

  # ============================================================================
  # CUSTOM CIRCUITVERSE CONFIGURATIONS (preserved from Rails 7)
  # ============================================================================

  # Disable origin check for Cross-Site Request Forgery (CSRF) protection for codespaces
  if ENV["DEV_CONTAINER"] === "true"
    config.action_controller.forgery_protection_origin_check = false
  end

  # Debug mode for assets (Rails 8 uses Propshaft by default, adjust if using Sprockets)
  # If you're still using Sprockets, uncomment these:
  # config.assets.debug = true
  # config.assets.quiet = true

  # Use an evented file watcher to asynchronously detect changes in source code
  config.file_watcher = ActiveSupport::EventedFileUpdateChecker

  # Sidekiq for background jobs
  config.active_job.queue_adapter = :sidekiq

  # Email configuration
  config.action_mailer.perform_deliveries = true
  config.action_mailer.raise_delivery_errors = true

  # SMTP settings with fallback to mailcatcher for local development
  if ENV["SMTP_ADDRESS"].present?
    config.action_mailer.smtp_settings = {
      address:              ENV["SMTP_ADDRESS"],
      port:                 ENV["SMTP_PORT"],
      user_name:            ENV["CIRCUITVERSE_EMAIL_ID"],
      password:             ENV["CIRCUITVERSE_EMAIL_PASSWORD"],
      ssl:                  true,
      authentication:       :login,
      enable_starttls_auto: true,
    }
    config.action_mailer.delivery_method = :smtp
  elsif ENV['DOCKER_ENVIRONMENT']
    config.action_mailer.smtp_settings = { address: "mailcatcher", port: 1025 }
    config.action_mailer.delivery_method = :smtp
  else
    config.action_mailer.smtp_settings = { address: "localhost", port: 1025 }
    config.action_mailer.delivery_method = :smtp
  end

  # Web Push (VAPID) configuration
  config.vapid_public_key = ENV["VAPID_PUBLIC_KEY"] || "BGxnigbQCa435vZ8_3uFdqLC0XJHXtONgEdI-ydMMs0JaBsnpUfLp0ULZkx8Xos="
  config.vapid_private_key = ENV["VAPID_PRIVATE_KEY"] || "FkEMkOQHvMybUlCGH-DsOljTJlLzYGb3xEYsFY5Roxk="

  # Whitelist all hosts in development (be careful with this in production!)
  config.hosts.clear
  config.hosts << /.*\Z/

end
