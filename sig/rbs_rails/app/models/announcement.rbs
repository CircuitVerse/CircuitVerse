class Announcement < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Announcement, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def body: () -> String?

    def body=: (String?) -> String?

    def body?: () -> bool

    def body_changed?: () -> bool

    def body_change: () -> [ String?, String? ]

    def body_will_change!: () -> void

    def body_was: () -> String?

    def body_previously_changed?: () -> bool

    def body_previous_change: () -> Array[String?]?

    def body_previously_was: () -> String?

    def body_before_last_save: () -> String?

    def body_change_to_be_saved: () -> Array[String?]?

    def body_in_database: () -> String?

    def saved_change_to_body: () -> Array[String?]?

    def saved_change_to_body?: () -> bool

    def will_save_change_to_body?: () -> bool

    def restore_body!: () -> void

    def clear_body_change: () -> void

    def link: () -> String?

    def link=: (String?) -> String?

    def link?: () -> bool

    def link_changed?: () -> bool

    def link_change: () -> [ String?, String? ]

    def link_will_change!: () -> void

    def link_was: () -> String?

    def link_previously_changed?: () -> bool

    def link_previous_change: () -> Array[String?]?

    def link_previously_was: () -> String?

    def link_before_last_save: () -> String?

    def link_change_to_be_saved: () -> Array[String?]?

    def link_in_database: () -> String?

    def saved_change_to_link: () -> Array[String?]?

    def saved_change_to_link?: () -> bool

    def will_save_change_to_link?: () -> bool

    def restore_link!: () -> void

    def clear_link_change: () -> void

    def start_date: () -> ActiveSupport::TimeWithZone?

    def start_date=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def start_date?: () -> bool

    def start_date_changed?: () -> bool

    def start_date_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def start_date_will_change!: () -> void

    def start_date_was: () -> ActiveSupport::TimeWithZone?

    def start_date_previously_changed?: () -> bool

    def start_date_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def start_date_previously_was: () -> ActiveSupport::TimeWithZone?

    def start_date_before_last_save: () -> ActiveSupport::TimeWithZone?

    def start_date_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def start_date_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_start_date: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_start_date?: () -> bool

    def will_save_change_to_start_date?: () -> bool

    def restore_start_date!: () -> void

    def clear_start_date_change: () -> void

    def end_date: () -> ActiveSupport::TimeWithZone?

    def end_date=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def end_date?: () -> bool

    def end_date_changed?: () -> bool

    def end_date_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def end_date_will_change!: () -> void

    def end_date_was: () -> ActiveSupport::TimeWithZone?

    def end_date_previously_changed?: () -> bool

    def end_date_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def end_date_previously_was: () -> ActiveSupport::TimeWithZone?

    def end_date_before_last_save: () -> ActiveSupport::TimeWithZone?

    def end_date_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def end_date_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_end_date: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_end_date?: () -> bool

    def will_save_change_to_end_date?: () -> bool

    def restore_end_date!: () -> void

    def clear_end_date_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Announcement, Integer]
    include Enumerable[Announcement]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Announcement, Integer]
  end
end
