module ActiveStorage
  class VariantRecord < ::ActiveStorage::Record
    extend _ActiveRecord_Relation_ClassMethods[ActiveStorage::VariantRecord, ActiveRecord_Relation, Integer]

    module GeneratedAttributeMethods
      def id: () -> Integer

      def id=: (Integer) -> Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ Integer?, Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[Integer?]?

      def id_previously_was: () -> Integer?

      def id_before_last_save: () -> Integer?

      def id_change_to_be_saved: () -> Array[Integer?]?

      def id_in_database: () -> Integer?

      def saved_change_to_id: () -> Array[Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def blob_id: () -> Integer

      def blob_id=: (Integer) -> Integer

      def blob_id?: () -> bool

      def blob_id_changed?: () -> bool

      def blob_id_change: () -> [ Integer?, Integer? ]

      def blob_id_will_change!: () -> void

      def blob_id_was: () -> Integer?

      def blob_id_previously_changed?: () -> bool

      def blob_id_previous_change: () -> Array[Integer?]?

      def blob_id_previously_was: () -> Integer?

      def blob_id_before_last_save: () -> Integer?

      def blob_id_change_to_be_saved: () -> Array[Integer?]?

      def blob_id_in_database: () -> Integer?

      def saved_change_to_blob_id: () -> Array[Integer?]?

      def saved_change_to_blob_id?: () -> bool

      def will_save_change_to_blob_id?: () -> bool

      def restore_blob_id!: () -> void

      def clear_blob_id_change: () -> void

      def variation_digest: () -> String

      def variation_digest=: (String) -> String

      def variation_digest?: () -> bool

      def variation_digest_changed?: () -> bool

      def variation_digest_change: () -> [ String?, String? ]

      def variation_digest_will_change!: () -> void

      def variation_digest_was: () -> String?

      def variation_digest_previously_changed?: () -> bool

      def variation_digest_previous_change: () -> Array[String?]?

      def variation_digest_previously_was: () -> String?

      def variation_digest_before_last_save: () -> String?

      def variation_digest_change_to_be_saved: () -> Array[String?]?

      def variation_digest_in_database: () -> String?

      def saved_change_to_variation_digest: () -> Array[String?]?

      def saved_change_to_variation_digest?: () -> bool

      def will_save_change_to_variation_digest?: () -> bool

      def restore_variation_digest!: () -> void

      def clear_variation_digest_change: () -> void
    end
    include GeneratedAttributeMethods

    def image_attachment: () -> ActiveStorage::Attachment?
    def image_attachment=: (ActiveStorage::Attachment?) -> ActiveStorage::Attachment?
    def build_image_attachment: (untyped) -> ActiveStorage::Attachment
    def create_image_attachment: (untyped) -> ActiveStorage::Attachment
    def create_image_attachment!: (untyped) -> ActiveStorage::Attachment
    def reload_image_attachment: () -> ActiveStorage::Attachment?
    def image_blob: () -> ActiveStorage::Blob?
    def image_blob=: (ActiveStorage::Blob?) -> ActiveStorage::Blob?
    def build_image_blob: (untyped) -> ActiveStorage::Blob
    def create_image_blob: (untyped) -> ActiveStorage::Blob
    def create_image_blob!: (untyped) -> ActiveStorage::Blob
    def reload_image_blob: () -> ActiveStorage::Blob?
    def blob: () -> ActiveStorage::Blob
    def blob=: (ActiveStorage::Blob?) -> ActiveStorage::Blob?
    def reload_blob: () -> ActiveStorage::Blob?
    def build_blob: (untyped) -> ActiveStorage::Blob
    def create_blob: (untyped) -> ActiveStorage::Blob
    def create_blob!: (untyped) -> ActiveStorage::Blob
    module GeneratedAssociationMethods
      def image: () -> ActiveStorage::Attached::One

      def image=: (ActionDispatch::Http::UploadedFile) -> ActionDispatch::Http::UploadedFile
                | (Rack::Test::UploadedFile) -> Rack::Test::UploadedFile
                | (ActiveStorage::Blob) -> ActiveStorage::Blob
                | (String) -> String
                | ({ io: IO, filename: String, content_type: String? }) -> { io: IO, filename: String, content_type: String? }
                | (nil) -> nil
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[ActiveStorage::VariantRecord, Integer]
      include Enumerable[ActiveStorage::VariantRecord]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[ActiveStorage::VariantRecord, Integer]
    end
  end
end
