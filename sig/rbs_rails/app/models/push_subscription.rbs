class PushSubscription < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[PushSubscription, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def endpoint: () -> String?

    def endpoint=: (String?) -> String?

    def endpoint?: () -> bool

    def endpoint_changed?: () -> bool

    def endpoint_change: () -> [ String?, String? ]

    def endpoint_will_change!: () -> void

    def endpoint_was: () -> String?

    def endpoint_previously_changed?: () -> bool

    def endpoint_previous_change: () -> Array[String?]?

    def endpoint_previously_was: () -> String?

    def endpoint_before_last_save: () -> String?

    def endpoint_change_to_be_saved: () -> Array[String?]?

    def endpoint_in_database: () -> String?

    def saved_change_to_endpoint: () -> Array[String?]?

    def saved_change_to_endpoint?: () -> bool

    def will_save_change_to_endpoint?: () -> bool

    def restore_endpoint!: () -> void

    def clear_endpoint_change: () -> void

    def p256dh: () -> String?

    def p256dh=: (String?) -> String?

    def p256dh?: () -> bool

    def p256dh_changed?: () -> bool

    def p256dh_change: () -> [ String?, String? ]

    def p256dh_will_change!: () -> void

    def p256dh_was: () -> String?

    def p256dh_previously_changed?: () -> bool

    def p256dh_previous_change: () -> Array[String?]?

    def p256dh_previously_was: () -> String?

    def p256dh_before_last_save: () -> String?

    def p256dh_change_to_be_saved: () -> Array[String?]?

    def p256dh_in_database: () -> String?

    def saved_change_to_p256dh: () -> Array[String?]?

    def saved_change_to_p256dh?: () -> bool

    def will_save_change_to_p256dh?: () -> bool

    def restore_p256dh!: () -> void

    def clear_p256dh_change: () -> void

    def auth: () -> String?

    def auth=: (String?) -> String?

    def auth?: () -> bool

    def auth_changed?: () -> bool

    def auth_change: () -> [ String?, String? ]

    def auth_will_change!: () -> void

    def auth_was: () -> String?

    def auth_previously_changed?: () -> bool

    def auth_previous_change: () -> Array[String?]?

    def auth_previously_was: () -> String?

    def auth_before_last_save: () -> String?

    def auth_change_to_be_saved: () -> Array[String?]?

    def auth_in_database: () -> String?

    def saved_change_to_auth: () -> Array[String?]?

    def saved_change_to_auth?: () -> bool

    def will_save_change_to_auth?: () -> bool

    def restore_auth!: () -> void

    def clear_auth_change: () -> void

    def user_id: () -> Integer?

    def user_id=: (Integer?) -> Integer?

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[PushSubscription, Integer]
    include Enumerable[PushSubscription]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[PushSubscription, Integer]
  end
end
