<link rel="stylesheet" type="text/css" href="/css/restrictedElements.css">

<script src="/js/metadata.json"></script>
<%= form_with(model: [group,@assignment], local: true, html: {onsubmit:"beforeSubmit()"}, multipart: true ,id:"assignmentForm") do |form| %>
  <% if @assignment.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@assignment.errors.count, "error") %> prohibited this assignment from being saved:</h2>

      <ul>
      <% @assignment.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div id="name-field" class="field">
    <%= form.label :name %>
    <%= form.text_field :name, id: :assignment_name, class: 'form-control'%>
  </div>

  <div id="wysiwyg" class="field">
    <%= render "wysiwyg/index" %>
  </div>

  <div id="deadline-field" class="field">
    <%= form.label :deadline %>
    <div class="input-group date" id="deadlinePicker" data-target-input="nearest">
      <input type="text" class="form-control datetimepicker-input" data-target="#deadlinePicker"/>
      <div class="input-group-append" data-target="#deadlinePicker" data-toggle="datetimepicker">
          <div class="input-group-text"><i class="fa fa-calendar"></i></div>
      </div>
    </div>
  </div>

  <div id="grade-field" class="field">
    <% if @assignment.new_record? %>
      <%= form.label :grading_scale %>*
      <%= form.select :grading_scale, [["No Grade", :no_scale], ["Letter", :letter], ["Percent", :percent], ["Custom", :custom]] %>
      <div class="tooltip-help assignment-tooltip"> Help
        <div class="right-help">
          <div> <span style="font-style: italic"> Percent </span>: Assignment can be graded on a scale of 1-100 </div>
          <div> <span style="font-style: italic"> Letter </span>: Assignment can be graded with letters A-F </div>
          <div> <span style="font-style: italic"> No Grade </span>: Assignment won't be graded </div>
          <div> <span style="font-style: italic"> Custom </span>: Assignment can be graded as required </div>
        </div>
      </div>
      <div>* Grading Scale cannot be changed once set</div>
    <% else %>
      <%= form.label :grading_scale %>
      <%= AssignmentDecorator.new(@assignment).graded %> <span style="font-style: italic"> (Cannot be edited) </span>
    <% end %>
  </div>

  <h3 style="margin-top: 15px;"> Elements Restriction </h3>

  <div id="restrictions-field" class="field" style="margin-bottom: 15px;">
    <span style="font-weight: 600"> Enable elements restriction: </span>  <%= check_box_tag "restrict-elements", "1", @assignment.elements_restricted?, id: "restrict-elements", style: "margin-top: 0" %>
    <div class="restricted-elements-list"> <!-- Operated by script --> </div>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>

<script type="text/javascript" src="/js/time.js"></script>
<script type="text/javascript" src="/js/restrict_elements.js"></script>
<script type="text/javascript">
  $(document).ready(function() {
    loadRestrictions(JSON.parse('<%= raw @assignment.restrictions %>'));
  })

  function beforeSubmit() {
      cleanEditor()
      generateRestricitons()
  }

  function cleanEditor() {
    $('<input />').attr('type', 'hidden')
      .attr('name', 'description')
      .attr('value', $("#editor").cleanHtml())
      .appendTo('#assignmentForm');
  }
  function generateRestricitons() {
    let updated_restrictions = [];
    if ($('#restrict-elements').is(":checked")) {
      let restricted_elements = $('.element-restriction');
      for (let i = 0; i < restricted_elements.length; i++) {
        let temp = $(restricted_elements[i]);
        if (temp.is(":checked"))
          updated_restrictions.push(temp.val())
      }
    }
    alert(JSON.stringify(updated_restrictions))
    $('<input />').attr('type', 'hidden')
        .attr('name', 'assignment[restrictions]')
        .attr('value', JSON.stringify(updated_restrictions))
        .appendTo('#assignmentForm');
    alert()
  }

</script>
