<script src="https://cdn.jsdelivr.net/bootstrap.tagsinput/0.8.0/bootstrap-tagsinput.min.js"></script>

<div id="collaboratorModal" class="modal fade" role="dialog">
  <div class="modal-dialog primary-modal-dialog">
    <div class="modal-content">
      <div class="modal-header primary-modal-header">
        <h4 class="modal-title">Add members</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
      <div class="modal-body">
        <p>Enter Email IDs separated by commas, spaces or enter. Users need to be registered already on the platform.
          Note that collaboration is not real time as of now. Every save overwites the previous data.
        </p>
        <%= form_with(model: @collaboration, local: true) do |form| %>
        <% if @collaboration.errors.any? %>
          <div id="error-message">
            <ul>
            <% @collaborator.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
            </ul>
          </div>
        <% end %>
        <div class="field">
          <%= form.hidden_field :project_id, id: :collaboration_project_id %>
        </div>
        <div class="form-group">
          <label for="emails">Email IDs:</label>
          <textarea class="form-control form-input" rows="5" id="emails" name="collaboration[emails]" data-role="tagsinput"></textarea>
        </div>
        <div class="modal-footer">
          <%= form.submit "Add Collaborators", class: 'btn primary-button add-collaborators-button' %>
        </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
$(document).ready(() => {
  // docs: http://bootstrap-tagsinput.github.io/bootstrap-tagsinput/examples/
  $('#emails').tagsinput({
    trimValue: true,
    confirmKeys: [13, 44, 32],
  });

  $('.bootstrap-tagsinput input').attr('maxlength', '30'); // to limit the no. of chars entered in input box to avoid the overflow

  $('.add-collaborators-button').attr('disabled', true); // setting submit button to disabled initially

  $('.bootstrap-tagsinput input').on('keyup', () => {
    if($('.bootstrap-tagsinput').children().length > 1) { // checking for 1 because there is already a child (input tag)
      $('.add-collaborators-button').attr('disabled', false);
    } else {
      $('.add-collaborators-button').attr('disabled', true);
    }
  });

  $('.bootstrap-tagsinput').on('click', () => { // if user deletes tags using mouse click instead of backspace
    if($('.bootstrap-tagsinput').children().length > 1) {
      $('.add-collaborators-button').attr('disabled', false);
    } else {
      $('.add-collaborators-button').attr('disabled', true);
    }
  })

  document.querySelector('.bootstrap-tagsinput input').addEventListener('paste', (e) => { // listening for paste event
    e.preventDefault();
    let pastedEmails = '';
    if (window.clipboardData && window.clipboardData.getData) { // IE
      pastedEmails = window.clipboardData.getData('Text');
    } else if (e.clipboardData && e.clipboardData.getData) { // other browsers
      pastedEmails = e.clipboardData.getData('text/plain');
    }

    if(pastedEmails.includes('\n')) {
      const newLinesIntoSpaces = pastedEmails.replace(/\n/g, ' '); // converting new lines in to spaces
      const newLinesIntoSpacesSplitted = newLinesIntoSpaces.split(' '); // splitting emails by space
      this.value = pastedEmails.replace(/./g, ''); // removing the pasted values from input box
      newLinesIntoSpacesSplitted.forEach(value => $('#emails').tagsinput('add', value)) // adding each value as an input
      $('.add-collaborators-button').attr('disabled', false)
    } else {
      const pastedEmailsSplittedBySpace = pastedEmails.split(' '); // splitting emails by space
      this.value = pastedEmails.replace(/./g, ''); // removing the pasted values from input box
      pastedEmailsSplittedBySpace.forEach(value => $('#emails').tagsinput('add', value)) // adding each value as an input
      $('.add-collaborators-button').attr('disabled', false)
    }
  });
});

</script>
