# Build stage for Ruby application
FROM --platform=$BUILDPLATFORM ruby:3.2.1-alpine AS builder

# Set production environment
ARG BUILDPLATFORM
ENV NODE_ENV=production \
    RAILS_ENV=production \
    BUNDLE_DEPLOYMENT=true \
    BUNDLE_WITHOUT=development:test \
    PATH=/usr/local/bundle/bin:$PATH

# Install build dependencies
RUN apk add --no-cache \
    build-base \
    postgresql-dev \
    curl \
    nodejs \
    npm \
    yarn \
    vips-dev \
    imagemagick \
    tzdata \
    git

WORKDIR /usr/src/app

# Install JavaScript dependencies
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile --network-timeout 1000000 \
    && yarn cache clean

# Install Ruby dependencies
COPY Gemfile* ./
RUN bundle config set --local deployment 'true' \
    && bundle config set --local without 'development:test' \
    && bundle install --jobs=4 --retry=3 \
    && rm -rf vendor/bundle/ruby/*/cache/*

# Copy application code
COPY . .
RUN rm -rf cv-frontend-vue

# Precompile assets
RUN RAILS_ENV=production \
    SECRET_KEY_BASE=1 \
    DATABASE_URL=postgres://nulldb \
    DISABLE_FLIPPER=true \
    bundle exec rails assets:precompile \
    && yarn cache clean \
    && rm -rf node_modules spec

# Precompile bootsnap cache
RUN bundle exec bootsnap precompile --gemfile app/ lib/

# Build stage for Vue simulator
FROM --platform=$BUILDPLATFORM node:lts-alpine AS simulator_vue_build

WORKDIR /app

# Copy Vue configuration and package files
COPY cv-frontend-vue/package*.json ./
COPY cv-frontend-vue/vite.config.ts ./

# Install dependencies
RUN npm ci --ignore-scripts

# Copy Vue source code
COPY cv-frontend-vue/ ./

# Build Vue application
RUN npm run build

# Final stage
FROM --platform=$BUILDPLATFORM ruby:3.2.1-alpine

# Set production environment variables
ENV RAILS_ENV=production \
    NODE_ENV=production \
    BUNDLE_PATH=/usr/local/bundle \
    RAILS_LOG_TO_STDOUT=true \
    BUNDLE_DEPLOYMENT=true \
    BUNDLE_WITHOUT="development:test" \
    RAILS_SERVE_STATIC_FILES="true" \
    LD_PRELOAD="/usr/lib/jemalloc.so.2" \
    MALLOC_CONF="dirty_decay_ms:1000,narenas:2,background_thread:true"

# Install runtime dependencies
RUN apk add --no-cache \
    postgresql-client \
    nodejs \
    tzdata \
    imagemagick \
    vips \
    jemalloc \
    curl \
    curl-dev \
    shared-mime-info \
    && mkdir -p /usr/src/app

WORKDIR /usr/src/app

# Copy artifacts from builder stages
COPY --from=builder /usr/local/bundle /usr/local/bundle
COPY --from=builder /usr/src/app /usr/src/app
COPY --from=simulator_vue_build /public/simulatorvue /usr/src/app/public/simulatorvue

# Configure container
EXPOSE 3000
ENTRYPOINT ["/usr/src/app/bin/docker-entrypoint"]
